@{
    ViewBag.Title = "Open Fixed Deposit";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="container">
    <div class="row mt-4">
        <div class="col-12">
            <h2 class="mb-3">Open Fixed Deposit</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <!-- Info card: shows rules and important notes -->
            <div class="card mb-3 border-info">
                <div class="card-body">
                    <h6 class="card-title text-info">FD Rules & Information</h6>
                    <ul class="mb-0" style="line-height:1.6">
                        <li><strong>Minimum Deposit:</strong> Rs. 10,000</li>
                        <li><strong>Compound Interest Rates (annual):</strong>
                            <ul>
                                <li>6% for up to 1 year</li>
                                <li>7% for more than 1 year up to 2 years</li>
                                <li>8% for durations longer than 2 years</li>
                            </ul>
                        </li>
                        <li><strong>Senior citizens:</strong> additional 0.5% interest</li>
                        <li>Account number will be <strong>auto-generated</strong> when the FD is created</li>
                        <li>Maturity amount will be calculated and displayed after creation</li>
                    </ul>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Create New FD</h5>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @if (ViewBag.ErrorMessage != null)
                    {
                        <div class="alert alert-danger" role="alert">@ViewBag.ErrorMessage</div>
                    }

                    <form method="post" action="@Url.Action("OpenFD", "Customer")" novalidate>
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <label for="fdAmount">Deposit Amount (Rs.)</label>
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text">Rs</span></div>
                                <input id="fdAmount" name="fdAmount" type="number" step="0.01" class="form-control" placeholder="Enter amount" value="@(Request.Form["fdAmount"] ?? (ViewBag.DepositAmount != null ? ViewBag.DepositAmount.ToString() : string.Empty))" required />
                            </div>
                            <small class="form-text text-muted">Minimum deposit: Rs. 10,000.</small>
                        </div>

                        <div class="form-group">
                            <label for="fdDurationMonths">Duration (months)</label>
                            <input id="fdDurationMonths" name="fdDurationMonths" type="number" class="form-control" placeholder="Number of months (e.g. 12)" value="@(Request.Form["fdDurationMonths"] ?? (ViewBag.DurationMonths != null ? ViewBag.DurationMonths.ToString() : string.Empty))" required />
                            <small class="form-text text-muted">Choose duration to determine interest rate.</small>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Open FD</button>
                            <button type="reset" class="btn btn-outline-secondary ml-2">Reset</button>
                        </div>

                        <hr />

                        <div class="mb-2">
                            <strong>Live preview</strong>
                            <p class="text-muted small mb-0">Estimated rate and maturity (senior citizen bonus not included in preview).</p>
                        </div>

                        <div class="d-flex justify-content-between">
                            <div>Estimated ROI:</div>
                            <div id="previewRoi">-</div>
                        </div>
                        <div class="d-flex justify-content-between">
                            <div>Estimated Maturity:</div>
                            <div id="previewMaturity">-</div>
                        </div>

                    </form>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mt-3 mt-lg-0">
            <div class="card border-primary shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">FD Summary</h5>

                    @if (ViewBag.SuccessMessage != null)
                    {
                        <div class="alert alert-success" role="alert">@ViewBag.SuccessMessage</div>
                    }

                    <dl class="row mb-0">
                        <dt class="col-sm-5">Account ID</dt>
                        <dd class="col-sm-7">@Html.Raw(ViewBag.FDAccountID ?? "-")</dd>

                        <dt class="col-sm-5">Deposit Amount</dt>
                        <dd class="col-sm-7">@String.Format("{0:C2}", (decimal)(ViewBag.DepositAmount ?? 0m))</dd>

                        <dt class="col-sm-5">Duration (months)</dt>
                        <dd class="col-sm-7">@Html.Raw(ViewBag.DurationMonths ?? "-")</dd>

                        <dt class="col-sm-5">Rate of Interest (%)</dt>
                        <dd class="col-sm-7">@Html.Raw(ViewBag.ROI ?? "-")</dd>

                        <dt class="col-sm-5">Maturity Amount</dt>
                        <dd class="col-sm-7">@String.Format("{0:C2}", (decimal?)(ViewBag.MaturityAmount ?? 0m))</dd>

                        <dt class="col-sm-5">Start Date</dt>
                        <dd class="col-sm-7">@(ViewBag.StartDate != null ? ((DateTime)ViewBag.StartDate).ToString("dd MMM yyyy") : "-")</dd>

                        <dt class="col-sm-5">End Date</dt>
                        <dd class="col-sm-7">@(ViewBag.EndDate != null ? ((DateTime)ViewBag.EndDate).ToString("dd MMM yyyy") : "-")</dd>

                        <dt class="col-sm-5">Status</dt>
                        <dd class="col-sm-7">@Html.Raw(ViewBag.Status ?? "-")</dd>

                        <dt class="col-sm-5">Remaining Savings</dt>
                        <dd class="col-sm-7">@(ViewBag.SavingsBalance != null ? String.Format("{0:C2}", (decimal)ViewBag.SavingsBalance) : "-")</dd>
                    </dl>

                    <p class="text-muted small mt-3">The FD is activated immediately and the amount has been deducted from your savings account. Please keep the Account ID for future reference.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            var amountEl = document.getElementById('fdAmount');
            var monthsEl = document.getElementById('fdDurationMonths');
            var roiEl = document.getElementById('previewRoi');
            var matEl = document.getElementById('previewMaturity');

            function compute() {
                var a = parseFloat(amountEl.value) || 0;
                var m = parseInt(monthsEl.value, 10) || 0;
                if (m <= 0 || a <= 0) {
                    roiEl.textContent = '-';
                    matEl.textContent = '-';
                    return;
                }

                // base ROI logic same as server
                var years = (m / 12);
                var baseRoi = 8.0;
                if (years <= 1.0) baseRoi = 6.0;
                else if (years > 1.0 && years <= 2.0) baseRoi = 7.0;

                // show roi (server may add senior bonus)
                roiEl.textContent = baseRoi.toFixed(2) + ' % (approx)';

                var r = baseRoi / 100.0;
                var t = years;
                var maturity = a * Math.pow(1 + r, t);
                matEl.textContent = new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(maturity.toFixed(2));
            }

            amountEl.addEventListener('input', compute);
            monthsEl.addEventListener('input', compute);

            // run on load if values present
            compute();
        })();
    </script>
}