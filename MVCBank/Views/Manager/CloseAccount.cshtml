@using MVCBank.Models.ViewModels
@{
    ViewBag.Title = "Manager - Close Account";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var accounts = ViewBag.Accounts as IEnumerable<AccountListItemViewModel>;
    string q = ViewBag.Query as string;
    string selectedType = ViewBag.AccountTypeSel as string ?? "";
}

<h2>Close Account</h2>

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">@ViewBag.SuccessMessage</div>
}

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="mb-3">
    <form method="get" action="@Url.Action("CloseAccount", "Manager")" class="row g-2" style="max-width:700px;">
        <div class="col-md-3">
            <label class="form-label">Account Type</label>
            <select name="accountType" class="form-control">
                <option value="" @(string.IsNullOrEmpty(selectedType) ? "selected" : null)>-- Select --</option>
                <option value="SAVINGS" @(selectedType=="SAVINGS" ? "selected" : null)>Savings</option>
                <option value="FD" @(selectedType=="FD" ? "selected" : null)>Fixed Deposit</option>
                <option value="LOAN" @(selectedType=="LOAN" ? "selected" : null)>Loan</option>
            </select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Search</label>
            <input type="text" name="q" value="@q" class="form-control" placeholder="Search by account id or customer id" />
        </div>
        <div class="col-md-3" style="align-self:end;">
            <button type="submit" class="btn btn-secondary" style="width:100%;">Search</button>
        </div>
    </form>
</div>

<form method="post" action="@Url.Action("CloseAccount", "Manager")" id="closeAccountForm">
    @Html.AntiForgeryToken()

    <input type="hidden" name="accountType" id="accountTypeHidden" value="@selectedType" />

    <div class="mb-3" style="max-width:400px;">
        <label class="form-label">Account ID</label>
        <input type="text" name="accountId" id="accountIdInput" class="form-control" placeholder="Enter account id e.g. SB00001" />
        <div class="form-text">Or select from the table below.</div>
    </div>

    <button type="submit" class="btn btn-danger">Close Account</button>

    @if (accounts != null && accounts.Any())
    {
        <div class="table-responsive mt-4" style="max-height:420px; overflow:auto;">
            <table class="table table-striped table-hover align-middle">
                <thead>
                    <tr>
                        <th>Select</th>
                        <th>Account ID</th>
                        <th>Customer ID</th>
                        <th>Status</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var a in accounts)
                {
                    <tr>
                        <td>
                            <input type="radio" name="accountIdRadio" value="@a.Id" onclick="document.getElementById('accountIdInput').value=this.value;" />
                        </td>
                        <td>@a.Id</td>
                        <td>@a.CustomerID</td>
                        <td>@a.Status</td>
                        <td>@a.Col1: @(a.Val1 != null ? String.Format("{0:N2}", a.Val1) : "")</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
</form>

<script>
// Ensure the selected radio button value is submitted as accountId
// and the correct accountType is always submitted
// (accountType is already handled by the hidden input)
</script>